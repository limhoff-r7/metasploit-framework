module Msf::Exploit::Payload::Handler
  #
  # Attributes
  #

  # @!attribute [rw] active_timeout
  #   Maximum number of seconds for active handlers
  #
  #   @return [Integer]
  attr_accessor :active_timeout

  #
  # Allows the payload handler to spawn a new monitor
  #
  def add_handler(opts={})
    return if not payload_instance
    return if not handler_enabled?
    payload_instance.add_handler(opts)
  end

  #
  # Passes the connection to the associated payload handler to see if the
  # exploit succeeded and a connection has been established.  The return
  # value can be one of the Handler::constants.
  #
  def handler(*args)
    return if not payload_instance
    return if not handler_enabled?
    return payload_instance.handler(*args)
  end

  #
  # Allow the user to disable the payload handler
  #
  def handler_enabled?
    not data_store['DisablePayloadHandler']
  end
end